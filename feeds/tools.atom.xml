<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jose Abells Reasearch Blog - Tools</title><link href="https://joseabell.com/" rel="alternate"></link><link href="https://joseabell.com/feeds/tools.atom.xml" rel="self"></link><id>https://joseabell.com/</id><updated>2016-11-17T15:36:31-08:00</updated><entry><title>Paralelism in the RealESSI Simulator</title><link href="https://joseabell.com/posts/2016/paralelism-in-the-realessi-simulator.html" rel="alternate"></link><published>2016-11-17T15:36:31-08:00</published><updated>2016-11-17T15:36:31-08:00</updated><author><name>Jose Abell</name></author><id>tag:joseabell.com,2016-11-17:/posts/2016/paralelism-in-the-realessi-simulator.html</id><summary type="html">&lt;p&gt;A brief description of parallelism in RealESSI Simuator&lt;/p&gt;</summary><content type="html">&lt;p&gt;by: José Abell&lt;/p&gt;
&lt;h1&gt;Paralelism in the RealESSI Simulator&lt;/h1&gt;
&lt;p&gt;Introduction&lt;/p&gt;
&lt;h6&gt;&lt;/h6&gt;
&lt;p&gt;The &lt;a href="http://sokocalo.engr.ucdavis.edu/~jeremic/ESSI_Simulator/"&gt;Real ESSI Simulator&lt;/a&gt;[&lt;a href="#essiref"&gt;1&lt;/a&gt; and &lt;a href="#essiref2"&gt;2&lt;/a&gt;]  is a system for simulation of ESSI (Earthquake-Soil-Structure Interaction) problems developed at the UC Davis computational geomechanics group &lt;a href="http://sokocalo.engr.ucdavis.edu/~jeremic/"&gt;CompGeoMech&lt;/a&gt;. The main program is a parallel object-oriented finite element analysis (FEA) software for non-linear time domain analysis of ESSI systems. The program is written in C++, using several external libraries to accomplish its goals, most notably &lt;a href="www.open-mpi.org/"&gt;OpenMPI&lt;/a&gt; (message passing interface) is used to achieve parallelism. Other libraries used within ESSI include: &lt;a href="http://www.mcs.anl.gov/petsc/"&gt;PETSc&lt;/a&gt; for parallel solution of system of equations, &lt;a href="http://glaros.dtc.umn.edu/gkhome/metis/metis/overview"&gt;METIS&lt;/a&gt; and &lt;a href="http://glaros.dtc.umn.edu/gkhome/metis/parmetis/overview"&gt;Par-METIS&lt;/a&gt; for graph partitioning, &lt;a href="http://www.hdfgroup.org"&gt;HDF5&lt;/a&gt; for output. Input is controlled by a custom domain-specific language designed by me specifically for this program. &lt;/p&gt;
&lt;p&gt;The software is meant to target a range of platforms from personal computers (desktop, laptop) to high-performance clusters and supercomputers. &lt;/p&gt;
&lt;p&gt;Parallelism in FEA&lt;/p&gt;
&lt;h6&gt;&lt;/h6&gt;
&lt;p&gt;&lt;img alt="npp" src="/images/other/npp.png" title="Nuclear power plant model and its decomposition."&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(Left and middle) Nuclear power plant model showing different areas, (right) domain decomposition of model.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Two main sources of parallelism can be identified in the context of nonlinear, dynamic finite element simulation: (i) system of equation solution and (ii) element-level constitutive integration. The first of these consists in the solution of a large linear system of equations (SOE) which arises from the discretization of the continuum problem (expressed as a set of coupled partial differential equations) in the spatial domain. The second source, comes from advancing the constitutive rate equations within each element once a global displacement increment is obtained from the solution of the SOE. This last part can account for a large part of the computational time for large problems and is embarrassingly parallel.&lt;/p&gt;
&lt;p&gt;An additional source of parallelism in ESSI simulations is the storage of the large ammounts of output generated by these simulations. The philosophy adopted by the ESSI simulator is to independently store the information necessary to build the model and restart the simulation at any given point. This gives rise to possibly terabytes of data in even modest models, with the additional problem on how to handle this. In ESSI this is done by using a &lt;a href="http://en.wikipedia.org/wiki/Network_File_System"&gt;network filesystem&lt;/a&gt; (NFS) to create a virtual parallel unique disk and the HDF5 format to store the data. In a nutshell, HDF5 implements a format for storing scientific (array-oriented) data in a portable way, and also allowing parallel read/write (it uses MPI I/O under the hood).&lt;/p&gt;
&lt;p&gt;A particularity of non-linear (plasticity based) FEA simulation is the unknown parts of the domain may plastify during simulations, leading to increased time spent integrating constitutive equations in that portion of the domain. What this implies is that, given an initial partition that balances the loading, this partition might become unbalanced if the domain plastifies. An adaptation of the dynamic domain decomposition method termed the "plastic domain decomposition"[&lt;a href="#pdd"&gt;3&lt;/a&gt;] or PDD, which achieves computational load re-balancing by repartitioning the element graph using computational time as one of the weighting factors.&lt;/p&gt;
&lt;p&gt;Implementation of Parallel Paradigms in RealESSI&lt;/p&gt;
&lt;h6&gt;&lt;/h6&gt;
&lt;p&gt;PDD is implemented in ESSI using the &lt;a href="http://en.wikipedia.org/wiki/Actor_model"&gt;Actor/Shadow&lt;/a&gt; model of concurrency. Actors are autonomous and concurrently executing objects which execute asynchronously. Actors can create new actors and can  send messages to other actors. The Actor model is an Object-Oriented version of message passing in which the Actors represent processes and the methods sent between Actors represent communications (verbatim from [&lt;a href="#lecture_notes"&gt;4&lt;/a&gt;]).&lt;/p&gt;
&lt;p&gt;&lt;img alt="shadowactor" src="/images/other/shadowactor.png" title="Shadow/actor model."&gt;&lt;/p&gt;
&lt;p&gt;Shadow-actors are the means in which actors communicate. Shadow-actors are objects which represent each running actor (remote) in a particular machine's local address space. Shadow actors are in charge of transmitting and receiving messages from other actors and effectively encapsulate all MPI calls. In the object-oriented design of ESSI this model allows reuse of code and modularity when programming using MPI. &lt;/p&gt;
&lt;p&gt;&lt;img alt="npp_build" src="/images/other/npp_build.png" title="Different physical zones of the NPP."&gt;&lt;/p&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id="essiref"&gt;&lt;/a&gt; Boris Jeremić, Robert Roche-Rivera, Annie Kammerer, Nima Tafazzoli, Jose Abell M., Babak Kamranimoghaddam, Federico Pisano, ChangGyun Jeong and Benjamin Aldridge The NRC ESSI Simulator Program, Current Status in Proceedings of the Structural Mechanics in Reactor Technology (SMiRT) 2013 Conference, San Francisco, August 18-23, 2013.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id="essiref2"&gt;&lt;/a&gt; Boris  Jeremić, Guanzhou Jie, Matthias Preisig and Nima Tafazzoli. Time domain simulation of soil-foundation-structure interaction in non-uniform soils. Earthquake Engineering and Structural Dynamics, Volume 38, Issue 5, pp 699-718, 2009.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id="pdd"&gt;&lt;/a&gt; Boris Jeremić and Guanzhou Jie. Plastic Domain Decomposition Method for Parallel Elastic–Plastic Finite Element Computations in Geomechanics Report UCD CompGeoMech 03–2007.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a id="lecture_notes"&gt;&lt;/a&gt; Lecture Notes on Computational Geomechanics: Inelastic Finite Elements for Pressure Sensitive Materials, UC Davis, CompGeoMech group&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Tools"></category><category term="parallel computing"></category><category term="RealESSI"></category><category term="MPI"></category></entry></feed>