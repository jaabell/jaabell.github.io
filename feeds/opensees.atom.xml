<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jose Abells Reasearch Blog - OpenSees</title><link href="https://joseabell.com/" rel="alternate"></link><link href="https://joseabell.com/feeds/opensees.atom.xml" rel="self"></link><id>https://joseabell.com/</id><updated>2022-08-17T13:21:30-07:00</updated><entry><title>Building OpenSees and OpenSeesPy on Ubuntu 22.04 using CMAKE</title><link href="https://joseabell.com/building-opensees-and-openseespy-on-ubuntu-2204-using-cmake-EN.html" rel="alternate"></link><published>2022-08-17T13:21:30-07:00</published><updated>2022-08-17T13:21:30-07:00</updated><author><name>jaabell</name></author><id>tag:joseabell.com,2022-08-17:/building-opensees-and-openseespy-on-ubuntu-2204-using-cmake-EN.html</id><summary type="html">&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;p&gt;In this short video I teach you how to compile …&lt;/p&gt;</summary><content type="html">&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;p&gt;In this short video I teach you how to compile the latest OpenSees and OpenSeesPy on Ubuntu Linux 22.04. &lt;/p&gt;
&lt;div class="videoWrapper" align="left"&gt;
&lt;iframe width="640" height="480" src="https://www.youtube.com/embed/S7AjsGX0t2I" frameborder="0"  allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Compilation is setup with no "bells and whistles", meaning its not optimized in any way
and does not include any extra features. &lt;/p&gt;
&lt;p&gt;The history file mentioned in the video can be found &lt;a href="https://www.dropbox.com/s/rhk54u42xrk37dk/history.txt?dl=0"&gt;here&lt;/a&gt; and this is the &lt;a href="https://www.dropbox.com/s/dyyz6qs3a1aoi7m/CMakeLists.txt?dl=0"&gt;CMakeLists.tex&lt;/a&gt; file.&lt;/p&gt;
&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;</content><category term="OpenSees"></category><category term="OpenSees"></category><category term="tutorial"></category><category term="compilation"></category><category term="linux"></category><category term="YouTube"></category></entry><entry><title>EOSD2022 Recap</title><link href="https://joseabell.com/posts/2022/eosd2022-recap.html" rel="alternate"></link><published>2022-07-19T15:41:47-07:00</published><updated>2022-07-19T15:41:47-07:00</updated><author><name>jaabell</name></author><id>tag:joseabell.com,2022-07-19:/posts/2022/eosd2022-recap.html</id><summary type="html">&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;div class="responsive-image"&gt;
&lt;img src="https://www.dropbox.com/s/68kr85qqa3gwej0/eosd2022.png?raw=1" / alt="Model"&gt;
&lt;/div&gt;
&lt;div class="responsive-image"&gt;
&lt;img src="https://www.dropbox.com/s/s1swwzen2tehcnz/students-arduino.jpg?raw=1" / alt="Model"&gt;
&lt;/div&gt;

&lt;p&gt;The Eurasian OpenSees days 2022 conference was a lot of …&lt;/p&gt;</summary><content type="html">&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;div class="responsive-image"&gt;
&lt;img src="https://www.dropbox.com/s/68kr85qqa3gwej0/eosd2022.png?raw=1" / alt="Model"&gt;
&lt;/div&gt;
&lt;div class="responsive-image"&gt;
&lt;img src="https://www.dropbox.com/s/s1swwzen2tehcnz/students-arduino.jpg?raw=1" / alt="Model"&gt;
&lt;/div&gt;

&lt;p&gt;The Eurasian OpenSees days 2022 conference was a lot of fun! Especially because I had the opportunity to go with two students: Omar Oyarce and Alberto Hurtado (shown in the picture above with professor Pedro Arduino from University of Washington, Seattle) and show them what this little academic niche is all about. &lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;div class="responsive-image"&gt;
&lt;img src="https://www.dropbox.com/s/2rlaoy4jnvyzcld/me-keynote.jpg?raw=1" / alt="Model"&gt;
&lt;/div&gt;
&lt;p&gt;Also, I had the honor of being invited to give a keynote lecture! This is my first one, and I really hope I could get some of my research ideas across, despite taking to much of my audiences tme. I talked about my current research grant objectives and how some new available tools in OpenSees (and the jungle around OpenSees), together with my new HPC cluster make it possible. Here is a pic from the keynote. I'd like to reiterate and make public my gratitude towards the organizers for selecting me for this. &lt;/p&gt;
&lt;div class="responsive-image"&gt;
&lt;img src="https://www.dropbox.com/s/ghsdtlggolexzt2/me-iga.jpg?raw=1" / alt="Model"&gt;
&lt;/div&gt;
&lt;p&gt;I also gave a talk on my former student &lt;a href="{filename}/new-2021-additions-to-opensees.md"&gt;Felipe Elgueta's implementation of isogeometric analysis of shells in OpenSees&lt;/a&gt; and his thesis work. &lt;/p&gt;
&lt;div class="responsive-image"&gt;
&lt;img src="https://www.dropbox.com/s/4ck4ph34w58l1wr/group-arduino-spacone.jpg?raw=1" / alt="Model"&gt;
&lt;/div&gt;
&lt;p&gt;We got to hang out with well established professors such as Enrico Spacone, Guido Camata, and Pedro Arduino. &lt;/p&gt;
&lt;p&gt;And also meet the new, rising stars in the OpenSees world: Davide Gorini, Fabio Di Trapani, Cristoforo Demartino, Tony Fierro,  to name a few but leaving out so many. See the list at the bottom of this article for a more complete appreciation list. &lt;/p&gt;
&lt;p&gt;OpenSees is really going in different, new exciting directions, as can be seen from the breath of the subjects covered in the conference. Striking new directions include metamaterial modeling and molecular dynamics. But also there is a lot going on in more classic study areas such as soil-structure interaction modeling (still no dogmas on SSI modeling I'm afraid... more research is needed) and structural mechanics. Not a lot of soil modeling going on (outside SSI) in the conference, I know there is some new stuff (geotechs should get their stuff together!). AI is entering the OpenSees stage with a lot of strength. It's cool to see all the new tools surrounding OpenSees which people are coming up with (visualizers, python interfaces, site response analysis aids, you name it!). The big star is STKO from ASDEA group, that has reached an amazing level of maturisty since last OpenSees days conference at Porto, Portugal. A lot of new research is being powered by STKO, with stunning visuals, and its good to see all the open contributions to OpenSees coming from that team.  &lt;/p&gt;
&lt;p&gt;I was impressed by a few talks and I hope to hear more from the authors. Here are some in no particular order (the order of the program):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Parametric investigation on damping properties of a type of snapping metamaterial&lt;/em&gt;. Luca Aceto, Guido Camata&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;A finite element investigation of the size-dependent mechanical properties of graphene&lt;/em&gt;. Dag Pasca, Matteo Pelliciari, Angelo Aloisio, Angelo M. Tarantino&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Brand new symmetric and asymmetric hysteresis models in OpenSees&lt;/em&gt; Salvatore Sessa, Nicolò Vaiana, Francesco Marmo, Luciano Rosati.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Assessment of the additional shear demand due to infills through a refined micromodel&lt;/em&gt;. Fabio Di Trapani, Valentina Bogatkina, Massimo Petracca, Guido Camata&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;A disruptive strategy for structural health monitoring with STKO&lt;/em&gt;. Alessia Amelio, Roberto Boccagna, Maurizio Bottini, Guido Camata, Nicola Germano, Massimo Petracca, Giuseppe Quaranta&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;On the seismic protection of existing structures: a large-scale modelling of nonlinear soil-structure-TMD interaction&lt;/em&gt;. Davide Noè Gorini, Guglielmo Clarizia, Pasquale Roberto Marrazzo, Rosario Montuori, Elide Nastri&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Enhancing seismic performance of semi-rigid connection using Shape Memory Alloy (SMA) bolts considering nonlinear soil–structure interaction&lt;/em&gt;. Benyamin Mohebi, Farzin Kazemi, Atefeh Yousefi&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Numerical evaluation of the soil-structure interaction effects on the seismic performance and vulnerability of high-rise RC buildings in southwestern Spain&lt;/em&gt;. Maria-Victoria Requena-Garcia-Cruz, Emilio Romero-Sanchez, Antonio Morales-Esteban&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Three-dimensional nonlinear soil-structure interaction modeling of a church bell tower in Guardiagrele, Italy&lt;/em&gt;. Onur Deniz Akan, Massimo Petracca, Guido Camata, Carlo Giovanni Lai, Enrico Spacone&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Modelling nonlinear static analysis for soil-structure interaction problems&lt;/em&gt;. Domenico Gallese, Davide Noè Gorini, Luigi Callisto&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Influence of boundary conditions on the site response of a basin&lt;/em&gt;. Tony Fierro, Maria Giovanna Durante, Massimina Castiglia, Filippo Santucci de Magistris&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;LTruss structures in OpenSees with steel to LVL or Glubam bolted connections&lt;/em&gt;. Da Shi, Cristoforo Demartino, and Zhi Li&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;A thermodynamic-based macroelement approach for dynamic analysis of soil-structure systems&lt;/em&gt;. Davide Noè Gorini, Luigi Callisto&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Authors: if you see this, get in touch! My email is my github handle followed by uandes.cl. &lt;/p&gt;</content><category term="OpenSees"></category><category term="opensees"></category><category term="conference"></category><category term="EOSD"></category><category term="python"></category><category term="gmsh"></category></entry><entry><title>EOSD2022 Summer School SSI Modeling</title><link href="https://joseabell.com/posts/2022/eosd2022-summer-school-ssi-modeling.html" rel="alternate"></link><published>2022-07-06T09:46:19-07:00</published><updated>2022-07-06T09:46:19-07:00</updated><author><name>jaabell</name></author><id>tag:joseabell.com,2022-07-06:/posts/2022/eosd2022-summer-school-ssi-modeling.html</id><summary type="html">&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;div class="responsive-image"&gt;
&lt;img src="https://www.dropbox.com/s/i31g9x7x1ku5yn7/figura.png?raw=1" / alt="Model"&gt;
&lt;/div&gt;

&lt;p&gt;Short applicative lecture given at Eurasian OpenSees Days 2022 in …&lt;/p&gt;</summary><content type="html">&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;div class="responsive-image"&gt;
&lt;img src="https://www.dropbox.com/s/i31g9x7x1ku5yn7/figura.png?raw=1" / alt="Model"&gt;
&lt;/div&gt;

&lt;p&gt;Short applicative lecture given at Eurasian OpenSees Days 2022 in Turin, Italy on July 6th. &lt;/p&gt;
&lt;p&gt;Supplementary material:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dropbox.com/s/slnk9s1z9dips22/presentation1-workshop.pdf?dl=1"&gt;Slides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dropbox.com/s/oaf5iiifizpc2k6/gmshopstools.py?dl=1"&gt;mshopstools.py&lt;/a&gt; - A toy library to interface &lt;em&gt;gmsh&lt;/em&gt; with &lt;code&gt;openseespy&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dropbox.com/s/9sf8aox89wcxkxu/workshop-ssi1.geo?dl=1"&gt;workshop-ssi1.geo&lt;/a&gt; - SSI &lt;em&gt;gmsh&lt;/em&gt; &lt;code&gt;.geo&lt;/code&gt; (geometry) file for the application. &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dropbox.com/s/z50ujz48ukjlesd/workshop-ssi1.msh?dl=1"&gt;workshop-ssi1.msh&lt;/a&gt; - SSI &lt;em&gt;gmsh&lt;/em&gt; &lt;code&gt;.msh&lt;/code&gt; (mesh) file for the application, generated from the above file without any modifications. &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dropbox.com/s/gjuswd4szpbr7we/workshop-ssi1.py?dl=1"&gt;workshop-ssi1.py&lt;/a&gt; - Python script that reads the &lt;code&gt;.msh&lt;/code&gt; file and creates and runs the OpenSees model using &lt;code&gt;openseespy&lt;/code&gt;. &lt;/li&gt;
&lt;/ul&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;</content><category term="OpenSees"></category><category term="opensees"></category><category term="conference"></category><category term="EOSD"></category><category term="python"></category><category term="gmsh"></category></entry><entry><title>Buidling a computer cluster for OpenSees</title><link href="https://joseabell.com/posts/2022/buidling-a-computer-cluster-for-opensees.html" rel="alternate"></link><published>2022-06-07T16:46:49-07:00</published><updated>2022-06-07T16:46:49-07:00</updated><author><name>jaabell</name></author><id>tag:joseabell.com,2022-06-07:/posts/2022/buidling-a-computer-cluster-for-opensees.html</id><summary type="html">&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;div class="responsive-image"&gt;
&lt;img src="https://www.dropbox.com/s/vd3t55bh6ffxxj5/IMG-20220602-WA0013.jpeg?raw=1" / alt="Initial setup!"&gt;
&lt;/div&gt;

&lt;p&gt;As part of my recently-awarded research grant where I'll study …&lt;/p&gt;</summary><content type="html">&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;div class="responsive-image"&gt;
&lt;img src="https://www.dropbox.com/s/vd3t55bh6ffxxj5/IMG-20220602-WA0013.jpeg?raw=1" / alt="Initial setup!"&gt;
&lt;/div&gt;

&lt;p&gt;As part of my recently-awarded research grant where I'll study the effects of near-field earthquakes in Santiago Chile (more on that in the future, maybe) I'm building a small cluster of computers (a &lt;a href="https://en.wikipedia.org/wiki/Beowulf_cluster"&gt;beowulf cluster&lt;/a&gt;). &lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;The main considerations were&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Maximum number of processores cores I can afford. &lt;/li&gt;
&lt;li&gt;3 to 4 Gb of RAM per core. &lt;/li&gt;
&lt;li&gt;Setup with Ubuntu Linux (22.04) running ansible for software provisioning, SLURM, OpenMPI, and all of the OpenSees dependencies. &lt;/li&gt;
&lt;li&gt;A network shared folder for home folders and results using something fast. &lt;/li&gt;
&lt;li&gt;Connect to main node using a mixture of SSH and remote desktop software. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Talking with Massimo Petarca of ASDEA, as well as based on my previous experience with running parallel OpenSees, it seems that OpenSees does not scale linearly with number of processors past 16 processes. This led me to hypothesize that we can get better performance from a distributed-memory system rather than one big server that fits all of the specs. &lt;/p&gt;
&lt;p&gt;So here is a bit of my reasoning for how I finally designed this system. &lt;/p&gt;
&lt;p&gt;Lets start with processors. Having had ample experience with Intel and knowing that they provide very fast linear algebra through the (now free to use) MLK library I initially quoted Intel-based systems. Xeons are one of the go-tos for the HPC industry. With Xeons you can get two or more sockets in the same motherboard and insane ammounts of ECC memory.  This is all fine for HPC servers (which require uptime and reliability) but I don't really care for the ECC and we also won't gain much in a single motherboard because of the afore-mentioned scaling issue. What I really need is OpenSees in scalar mode (as well as in parallel with low process counts) to run fast. FastFAST! Fast Xeon processors are incredibly expensive. I side-looked into AMD territory, I've been hearing that in the desktop market AMD has been giving Intel a whopping. I was impressed and tempted with AMD Threadrippers, but I really don't need 32 cores and if I get the 16 core I might as well go cheaper with Ryzen 9's 5950X with the same core count and higher clock speeds. I also looked into the new Intel i9's which are impressive, but, though the core count is the same, i9s actually have two types of cores: performance cores (clocks over 5.0GHz) and eficiency cores (around 4.0GHz)... I really want all performance cores. Also tempting is the new DDR5 memory, but its spanking new and bound to be yet technologically unstable as motherboard manufacturers learn the tricks to tap into DDR5 territory (which is somewhat significantly different and more expensive than previous generation DDR4 memory. ). Oh... AMD can handle ECC memory BTW. &lt;/p&gt;
&lt;p&gt;Coming back to that Intel MKL, I was under the impression that it only worked on Intel computers (duh)... but its turns out you can work around this and get some break-neck performance boosts with MKL on AMDs too! (see &lt;a href="https://www.pugetsystems.com/labs/hpc/How-To-Use-MKL-with-AMD-Ryzen-and-Threadripper-CPU-s-Effectively-for-Python-Numpy-And-Other-Applications-1637/"&gt;this&lt;/a&gt; and &lt;a href="https://www.reddit.com/r/matlab/comments/dxn38s/howto_force_matlab_to_use_a_fast_codepath_on_amd/"&gt;this too&lt;/a&gt;). So this removed the final barrier for me to opt for AMD for my cluster.  &lt;/p&gt;
&lt;p&gt;So, based on all of this and my budget, for the compute nodes I'm getting 8 gaming computers outfitted with liquid cooled Ryzen 9 5950Xs (yes we will be overclocking these to get that performance boost and break into 5.0GHz territory), 64 Gb of DDR4 each, high-end Aorus motherboards, 2.5GbE network cards, and 500Gb M.2 NVMe PCIe x16 SSDs for OS and local (fast) storage options. The main (login) node will have a humbler Ryzen 9 5900X (12 cores instead of 16) and only 32 Gigs of RAM, because this is just used for login, compiling and maybe some pre/post-processing. Also it will be used for storage so its getting an extra 2Tb NVMe drive for the home folders, maybe I'll get some RAID SSDs next year. &lt;/p&gt;
&lt;p&gt;GPU you're asking? What GPU?&lt;/p&gt;
&lt;p&gt;To finish the cluster, I need a fast switch. I started out with a 48-port gigabit switch I had lying around (the one you'll see in the pictures). This is totally incapable of writing to that SSD (which can theoretically write up to 7.2 GBit/s). So I bought a couple of &lt;a href="https://www.qnap.com/en/product/qsw-m2108-2c"&gt;8port 2.5GbE QNAP managed switches&lt;/a&gt; that come with two 10GbE SFP+ ports. I also added a twin-port SFP+ capable ethernet card to the main node. I'll be doing some benchmarks of all this stuff shortly to see if I get the kind of write-performance that I want on this beast. &lt;/p&gt;
&lt;p&gt;To setup the software stack, I used the &lt;a href="https://github.com/jaabell/BeowulfInstaller"&gt;BeowulfInstaller&lt;/a&gt; that my CS students developed last year. It installs smoothly over Ubuntu 22.04 so I'm really happy with that. We added a few extra things so I can share the large storage in the main node through NFS. &lt;/p&gt;
&lt;p&gt;I'm having lots of fun these days building, testing, benchmarking and improving this system. I'm developing and sharing all my custom benchmarks on &lt;a href="https://github.com/jaabell/ClusterBenchmarks"&gt;this GitHub repo&lt;/a&gt;. &lt;a href="https://github.com/jaabell/ShakerMaker"&gt;ShakeMaker&lt;/a&gt; is running smoothly on the cluster and scaling linearly to all currently available 128 cores. Will be running OpenSees very soon. &lt;/p&gt;
&lt;p&gt;I want to finish with some special thanks to all that have contributed to this project over the years. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.uandes.cl/personas/carlos-castex/"&gt;Carlos Castex&lt;/a&gt; (permanently on the team)&lt;/li&gt;
&lt;li&gt;José Luis Assadi (team v.1)&lt;/li&gt;
&lt;li&gt;Cristobal Griffero (team v.1)&lt;/li&gt;
&lt;li&gt;Sebastián Baixas (team v.2 and v.3)&lt;/li&gt;
&lt;li&gt;Joaquin Fernandez (team v.2)&lt;/li&gt;
&lt;li&gt;José Tomás Gutiérrez (team v.2)&lt;/li&gt;
&lt;li&gt;Omar Oyarce (team v.3)&lt;/li&gt;
&lt;li&gt;Alberto Hurtado (team v.3)&lt;/li&gt;
&lt;li&gt;José Luis Larenas (team v.3)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here are some pics of us having fun configuring this thing in the civil engineering lab at UANDES.&lt;/p&gt;
&lt;!-- &lt;div class="responsive-image"&gt;&lt;img src="" / alt="Initial setup day! Pizzas are a must!"&gt;&lt;/div&gt; --&gt;

&lt;div class="responsive-image"&gt;&lt;img src="https://www.dropbox.com/s/06s4s3l3mo02sfg/20220517_222312.jpg?raw=1" / alt="Initial setup!"&gt;Initial setup day! Pizzas are a must!
&lt;/div&gt;

&lt;div class="responsive-image"&gt;&lt;img src="https://www.dropbox.com/s/k21v3x6p1tx907f/20220517_222342.jpg?raw=1" / alt="Initial setup!"&gt;
Omar (MS student), myself and Sebastián (former undergrad student, original creator of BeowulfInstaller) started working around 9PM
&lt;/div&gt;
&lt;div class="responsive-image"&gt;&lt;img src="https://www.dropbox.com/s/nl2zxzig5sa4s2n/20220517_222349.jpg?raw=1" / alt=""&gt;Main node is up and running. Installing Ubuntu on a compute node. &lt;/div&gt;

&lt;div class="responsive-image"&gt;&lt;img src="https://www.dropbox.com/s/1fg60l4nqbgygzl/20220517_230021.jpg?raw=1" / alt=""&gt;JL Larenas (future MS student) is also here for emotional support. &lt;/div&gt;

&lt;div class="responsive-image"&gt;&lt;img src="https://www.dropbox.com/s/b6lrnnvv61it5cq/20220518_005352.jpg?raw=1" / alt=""&gt;Main node, two compute nodes and a switch. The basic setup to start testing and setting up with BeowulfInstaller&lt;/div&gt;

&lt;div class="responsive-image"&gt;&lt;img src="https://www.dropbox.com/s/m9o6jus4dczpk9y/20220525_134638.jpg?raw=1" / alt=""&gt;The next day I added two more nodes. Some gibberish on-screen. Nice RGB lights on the RAM, I did not ask for those! &lt;/div&gt;

&lt;div class="responsive-image"&gt;&lt;img src="https://www.dropbox.com/s/mcd4o2r4w2n649o/20220602_095204.jpg?raw=1" / alt="Initial setup!"&gt;Setting up more nodes and an old-fashioned rack to get everything tidy. &lt;/div&gt;

&lt;div class="responsive-image"&gt;&lt;img src="https://www.dropbox.com/s/2dai1gnampzs1ab/20220602_102809.jpg?raw=1" / alt="Initial setup!"&gt;Special visit by Rodrigo who is a EE student taking my undergrad statics class that wanted to take a look. &lt;/div&gt;

&lt;div class="responsive-image"&gt;&lt;img src="https://www.dropbox.com/s/vd3t55bh6ffxxj5/IMG-20220602-WA0013.jpeg?raw=1" / alt="Initial setup!"&gt;The current setup. All my 8 nodes are up. I need to configure the QNAP switch and see what kind of performance gains I get with that. The campus electrician will help me tidy up the cables and get more power for 4 more nodes (next year we'll duplicate the ammount of nodes!)&lt;/div&gt;

&lt;div class="responsive-image"&gt;&lt;img src="https://www.dropbox.com/s/jjxwa9twob6b878/20201209_152907.jpg?raw=1" / alt="Initial setup!"&gt;v.2 of the Cluster was using these computer labs. On the picure Joaco Fernandez and JT Gutierrez.  Picture is from summer (january) 2021. &lt;/div&gt;

&lt;div class="responsive-image"&gt;&lt;img src="https://www.dropbox.com/s/o3zl3i8yemdn70a/20210129_151546.jpg?raw=1" / alt="Initial setup!"&gt;Joaco, me, JT and Sebastián Baixas. The birth of BeowulfInstaller. What a team!  &lt;/div&gt;

&lt;div class="responsive-image"&gt;&lt;img src="https://www.dropbox.com/s/avvnlv50ro44ihw/DZThqffVMAA8rJU.jpeg?raw=1" / alt="Initial setup!"&gt;  &lt;/div&gt;
&lt;p&gt;José Luis Assadi, Cristoba Griffero, Carlos Castex and me. The original cluster team!! Photo is from March 2018.&lt;/p&gt;</content><category term="OpenSees"></category><category term="opensees"></category><category term="hpc"></category><category term="cluster"></category></entry><entry><title>New 2021 additions to OpenSees</title><link href="https://joseabell.com/new-2021-additions-to-opensees-EN.html" rel="alternate"></link><published>2021-12-28T17:45:29-08:00</published><updated>2021-12-28T17:45:29-08:00</updated><author><name>jaabell</name></author><id>tag:joseabell.com,2021-12-28:/new-2021-additions-to-opensees-EN.html</id><summary type="html">&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;p&gt;2021 has almost gone, I haven't written on my blog …&lt;/p&gt;</summary><content type="html">&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;p&gt;2021 has almost gone, I haven't written on my blog almost all year, but there has been progress! I've made a bunch of small contributions this year to OpenSees (see all contributions &lt;a href="https://github.com/jaabell/OpenSees/commits?author=jaabell"&gt;here&lt;/a&gt;) but two big ones: a new material model for high-cyclic analysis of sands (SANISAND-MS with my collaborators at TU Delft, NGI and Bristol, see &lt;a href="https://opensees.github.io/OpenSeesDocumentation/user/manual/material/ndMaterials/SAniSandMS.html"&gt;here&lt;/a&gt;) and added isogeometric analysis (IGA) of shells capabilities. This last contribution is very recent and is still (as of writing this) in &lt;a href="https://github.com/OpenSees/OpenSees/pull/751"&gt;pull request&lt;/a&gt; mode. I'll let some time pass, for possible review, before I definitely merge into main OpenSees. &lt;/p&gt;
&lt;div class="responsive-image"&gt;
&lt;img src="https://www.dropbox.com/s/yze9aihu4xg742f/fig-07.png?raw=1" / alt="Really large deformations!"&gt;
&lt;/div&gt;

&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;Briefly, IGA uses &lt;a href="https://en.wikipedia.org/wiki/Non-uniform_rational_B-spline"&gt;NURBS&lt;/a&gt; as a functional basis instead of regular polynomials. NURBS is a well developed CAD technology that allows very smooth modeling of lines, surfaces and volumes. Because in continuum mechanics we use lots of derivatives of the main solution field (strains, stresses come from derivatives of the displacement field) this smoothness is an advantage over regular FEM in that you can ensure inter-element continuity of these fields. This, in turn, produces some nice convergence properties. &lt;/p&gt;
&lt;p&gt;In the figure above, we can see that IGA allows for large deformation modeling. Shown is the "pinched cylinder" benchmark case. You can see we replicate a reference solution with accuracy. &lt;/p&gt;
&lt;p&gt;Anyway, like any new technology there are trade-offs to keep in mind. In IGA there are two nice features of FEM which are lost: first, the concept of element and, second, the interpolatory property for nodal values. &lt;/p&gt;
&lt;p&gt;In the first issue, the higher continuity attained by the NURBS basis is obtained by "overlaping" elements for continuity order 2 and above. Thus, in IGA one is more preoccupied with "patches" of elements, which for all intents and purposes can be thought of as a regular finite element with a variable (large) number of nodes which is mapped onto a rectangular parent domain. &lt;/p&gt;
&lt;p&gt;Regarding the second issue, lets use a picture&lt;/p&gt;
&lt;div class="responsive-image"&gt;
&lt;img src="https://www.dropbox.com/s/frojrd80mp5q683/fig-01.png?raw=1" / alt="NURBS in general are not interpolatory. :/"&gt;
&lt;/div&gt;

&lt;p&gt;Shown is a standard cantilever beam modeled as a single "patch" of IGA "elements", with a tip load and solved using the new OpenSees capabilities (see script &lt;a href="https://github.com/jaabell/OpenSees-IGA-Examples/blob/master/KLShell/igaCantilever.py"&gt;here&lt;/a&gt;). Depending on the order of continuity you can have 2 elements (order 2) or 1 element (order 3) in the longitudinal direction, whereas order is 1 in the transverse direction. You can see the &lt;em&gt;control points&lt;/em&gt; (terminology for nodes in IGA) do not belong to the surface, except at the edges of the patch. Depending on specific details, not even the patch edges are generally included in the surface. The DOFs at the control points are the displacements of the control points, which uniquely describe the shape of the surface. The other thing to note is that two rows of control points are fixed. This is to enforce the no-rotation (clamped) boundary condition at the left edge. The shell formulation used is a Kirchoff-Love formulation which only has displacements at the control points as DOFS (no rotations). This can take a bit getting used to if you do classical shell analysis where elements have 6 DOFS (3 displacements and 3 rotations) at each node. Oh, by the way, that is not an amplified deformed shape, e.g. those are real displacements... &lt;/p&gt;
&lt;p&gt;Another annoying thing about IGA is that if you want to do anything more complex (or you want a better mesh) you'll need several patches. If the edge nodes are interpolatory (as is assumed in the OpenSees implementation for shells), then only C0 continuity is available across patches, which means you have to do some tricks to guarantee bending stiffness across patch boundaries. More on this in a future video I hope. &lt;/p&gt;
&lt;p&gt;For now, I'll wrap up with more pics of large deformation, highly-nonlinear, snappy-throughy analysis cases whet your appetite for IGA. All can be found in the examples repo (&lt;a href="https://github.com/jaabell/OpenSees-IGA-Examples/blob/master/KLShell"&gt;here&lt;/a&gt;) if you're patient. &lt;/p&gt;
&lt;div class="responsive-image"&gt;
&lt;img src="https://www.dropbox.com/s/oobjk7ugj2syu4t/fig-09.png?raw=1" / alt="Laaaaarge displacements! :)"&gt;
&lt;/div&gt;

&lt;div class="responsive-image"&gt;
&lt;img src="https://www.dropbox.com/s/uth3fv0zyqzhil4/fig-11.png?raw=1" / alt="We implemented this for composite analysis, so orthotropic variable orientation layups are possible."&gt;
&lt;/div&gt;

&lt;div class="responsive-image"&gt;
&lt;img src="https://www.dropbox.com/s/0mzy08bdfpw675r/fig-10.png?raw=1" / alt="And we do have some benchmarks to show that we did a good job! ;)"&gt;
&lt;/div&gt;</content><category term="OpenSees"></category><category term="OpenSees"></category><category term="additions"></category><category term="materials"></category><category term="IGA"></category></entry><entry><title>Compiling OpenSees 3.2.0 on Ubuntu 20.10: a tutorial and commentary</title><link href="https://joseabell.com/compiling-opensees-320-on-ubuntu-2010-a-tutorial-and-commentary-EN.html" rel="alternate"></link><published>2020-12-01T11:22:13-08:00</published><updated>2020-12-01T11:22:13-08:00</updated><author><name>jaabell</name></author><id>tag:joseabell.com,2020-12-01:/compiling-opensees-320-on-ubuntu-2010-a-tutorial-and-commentary-EN.html</id><summary type="html">&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;p&gt;In this short video I teach you how to compile …&lt;/p&gt;</summary><content type="html">&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;p&gt;In this short video I teach you how to compile OpenSees 3.2.0 on Ubuntu Linux 20.10. &lt;/p&gt;
&lt;div class="videoWrapper" align="left"&gt;
&lt;iframe width="640" height="480" src="https://www.youtube.com/embed/esMK3f5G90Y" frameborder="0"  allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;p&gt;Compilation is setup with no "bells and whistles", meaning its not optimized in any way
and does not include any extra features. &lt;/p&gt;
&lt;p&gt;The history file mentioned in the video can be found &lt;a href="https://www.dropbox.com/s/bcmfjkrxla9n6je/hist.txt?dl=0"&gt;here&lt;/a&gt; and this is the &lt;a href="https://www.dropbox.com/s/gj7sfmqqlz8dhh5/Makefile.def?dl=0"&gt;Makefile.def&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out &lt;a href="https://courses.silviasbrainery.com/"&gt;Silvia's Brainery&lt;/a&gt; and &lt;a href="https://portwooddigital.com/"&gt;Michael Scott's blog&lt;/a&gt; for more awesome OpenSees stuff!&lt;/p&gt;</content><category term="OpenSees"></category><category term="OpenSees"></category><category term="tutorial"></category><category term="compilation"></category><category term="linux"></category><category term="YouTube"></category></entry><entry><title>STKO OpenSees review</title><link href="https://joseabell.com/stko-opensees-review-EN.html" rel="alternate"></link><published>2020-11-30T12:19:44-08:00</published><updated>2020-11-30T12:19:44-08:00</updated><author><name>jaabell</name></author><id>tag:joseabell.com,2020-11-30:/stko-opensees-review-EN.html</id><summary type="html">&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;A created a short &lt;a href="https://twitter.com/hashtag/review?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#review&lt;/a&gt; of STKO: a pre/post …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;A created a short &lt;a href="https://twitter.com/hashtag/review?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#review&lt;/a&gt; of STKO: a pre/post processor for &lt;a href="https://twitter.com/hashtag/OpenSees?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#OpenSees&lt;/a&gt; which I think is really cool and brings fresh new stuff into OpenSees to benefit all. &lt;a href="https://t.co/EnMAVAnRya"&gt;https://t.co/EnMAVAnRya&lt;/a&gt;&lt;/p&gt;&amp;mdash; José Antonio Abell (@RealJoseAbell) &lt;a href="https://twitter.com/RealJoseAbell/status/1333422948607287297?ref_src=twsrc%5Etfw"&gt;November 30, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;</content><category term="OpenSees"></category><category term="OpenSees"></category><category term="review"></category><category term="YouTube"></category></entry></feed>